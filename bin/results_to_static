#!/bin/bash

arg0="${0##*/}"

dbase='/data/Track_Time/Track_Time.db'

php_base="/var/www/html/HSV_Timing/management/"
static_base="/var/www/html/HSV_Timing/Results/"
static_refresh=60
forward_results_command="forward_results"
runners_only=""
result_types=(hillclimb_1 results_ft results_et results_rt hillclimb)
results_title=True

# Import YAML config with python helper
eval $( results_conf )

result_list=( )
for result_type in "${result_types[@]}"
do
  result_list+=("${static_base}/${result_type}.html")
done

#set | fgrep result_types
#set | fgrep result_list

data_ts="/dev/shm/.data.ts.$arg0"
push_ts="/dev/shm/.push.ts.$arg0"
rm "$data_ts"

show_banner=''
if [[ "False" != "$results_title" ]]
then
  show_banner='/--TITLE_BANNER--/d
'
fi

function update_pages()
{
  event=""

  for result_type in "${result_types[@]}"
  do
    if [[ -f "${php_base}/${result_type}.php" ]] && php "${php_base}/${result_type}.php" $runners_only |
     sed "$show_banner/function showTiming/,+5d"'
      /meta http-equiv="refresh"/ s/content="[0-9]*"/content="'"${static_refresh}"'"/' \
       > "${static_base}/${result_type}".html.new
    then
      touch "$data_ts"
      if diff "${static_base}/${result_type}".html.new "${static_base}/${result_type}".html >/dev/null
      then
        : No change to results
      else
        event=$(sed -n 's/.*<!-- Timing_Event_Num='"'\(.*\)'"' -->.*/\1/p' "${static_base}/${result_type}".html.new )
        need_to_refresh=y
        mv "${static_base}/${result_type}".html.new "${static_base}/${result_type}".html
      fi
    fi
  done

  if [[ y = "$need_to_refresh" || "${static_base}/${result_types}".html -nt "$push_ts" ]] &&
     type "${forward_results_command}" >/dev/null 2>&1
  then
    [[ "" == "${event}" ]] &&
      event=$(sed -n 's/.*<!-- Timing_Event_Num='"'\(.*\)'"' -->.*/\1/p' "${static_base}/${result_types}".html )
    "${forward_results_command}" "$push_ts" "${event}" "${result_list[@]}" &&
     need_to_refresh=''
  fi
}

wait_time=2
while true
do
  if inotifywait -e modify /data/state_Finish -t $wait_time >/dev/null 2>&1
  then
    sleep 2
    update_pages
    sleep 20
  else
    if [[ "${dbase}" -nt "$data_ts" ||
          "${dbase}-wal" -nt "$data_ts" ||
          "${dbase}-shm" -nt "$data_ts" ]]
    then
      update_pages
    elif [[ y = "$need_to_refresh" || "${static_base}/${result_types}".html -nt "$push_ts" ]] &&
         type "${forward_results_command}" >/dev/null 2>&1
    then
      event=$(sed -n 's/.*<!-- Timing_Event_Num='"'\(.*\)'"' -->.*/\1/p' "${static_base}/${result_types}".html )
      "${forward_results_command}" "$push_ts" "${event}" "${result_list[@]}" &&
       need_to_refresh=''
    fi
  fi
  wait_time=120
done
